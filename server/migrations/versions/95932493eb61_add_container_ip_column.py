"""Add container_ip column

Revision ID: 95932493eb61
Revises: d5fbc9ed6349
Create Date: 2025-03-05 21:33:56.135059

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy import inspect

# revision identifiers, used by Alembic.
revision: str = '95932493eb61'
down_revision: Union[str, None] = 'd5fbc9ed6349'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def column_exists(table: str, column: str) -> bool:
    """Check if a column exists in a table using database-agnostic method."""
    conn = op.get_bind()
    inspector = inspect(conn)
    columns = [col['name'] for col in inspector.get_columns(table)]
    return column in columns


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add container_ip column if it doesn't exist
    if not column_exists('sessions', 'container_ip'):
        op.add_column('sessions', sa.Column('container_ip', sa.String(), nullable=True))

    # Drop mapped_port column if it exists
    if column_exists('sessions', 'mapped_port'):
        # PostgreSQL supports dropping columns directly
        op.drop_column('sessions', 'mapped_port')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add mapped_port column if it doesn't exist
    if not column_exists('sessions', 'mapped_port'):
        op.add_column('sessions', sa.Column('mapped_port', sa.VARCHAR(), nullable=True))

    # Drop container_ip column in downgrade
    if column_exists('sessions', 'container_ip'):
        # PostgreSQL supports dropping columns directly
        op.drop_column('sessions', 'container_ip')
    # ### end Alembic commands ###
