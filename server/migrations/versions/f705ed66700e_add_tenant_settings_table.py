"""add_tenant_settings_table

Revision ID: f705ed66700e
Revises: 0a7bc5c94ccb
Create Date: 2025-08-01 18:39:42.239725

"""

import secrets
import string
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


from server.migrations.tenant import for_each_tenant_schema


def generate_secure_api_key(length: int = 32) -> str:
    """Generate a secure API key."""
    alphabet = string.ascii_letters + string.digits
    return ''.join(secrets.choice(alphabet) for _ in range(length))


# revision identifiers, used by Alembic.
revision: str = 'f705ed66700e'
down_revision: Union[str, None] = '0a7bc5c94ccb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


@for_each_tenant_schema
def upgrade(schema: str) -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'settings',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('key', sa.String(length=256), nullable=False),
        sa.Column('value', sa.String(length=4096), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        schema=schema,
    )
    op.create_index(
        op.f('ix_settings_key'), 'settings', ['key'], unique=False, schema=schema
    )

    # Generate and insert secure API key for default tenant only
    if schema == 'tenant_default':
        api_key = generate_secure_api_key()
        op.execute(f"""
            INSERT INTO tenant_default.settings (id, key, value, created_at, updated_at)
            VALUES (
                gen_random_uuid(),
                'API_KEY',
                '{api_key}',
                NOW(),
                NOW()
            )
        """)

        # Print setup credentials
        print('\n' + '=' * 60)
        print('🚀 LEGACY-USE SETUP COMPLETE')
        print('=' * 60)
        print('📡 Server URL: http://tenant-default.lvh.me:5173/')
        print(f'🔑 API Key: {api_key}')
        print('\n💡 To access your instance:')
        print('   1. Open the URL in your browser')
        print('   2. Enter the API key when prompted')
        print('   3. Configure your AI provider in Settings')
        print(
            '\n⚠️  Keep this API key secure - it provides full access to your instance!'
        )
        print('=' * 60 + '\n')

    # ### end Alembic commands ###


@for_each_tenant_schema
def downgrade(schema: str) -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_settings_key'), table_name='settings', schema=schema)
    op.drop_table('settings', schema=schema)
    # ### end Alembic commands ###
